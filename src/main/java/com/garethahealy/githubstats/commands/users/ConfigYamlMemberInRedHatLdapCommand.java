package com.garethahealy.githubstats.commands.users;

import com.garethahealy.githubstats.services.users.ConfigYamlMemberInRedHatLdapService;
import com.garethahealy.githubstats.services.users.GitHubMemberInRedHatLdapService;
import freemarker.template.TemplateException;
import jakarta.enterprise.context.Dependent;
import jakarta.inject.Inject;
import org.apache.directory.api.ldap.model.exception.LdapException;
import picocli.CommandLine;

import java.io.IOException;

@Dependent
@CommandLine.Command(name = "configyaml-member-in-ldap", mixinStandardHelpOptions = true, description = "Creates a single issue containing any users that are part of the GitHub Org but not in LDAP anymore, i.e.: have left Red Hat")
public class ConfigYamlMemberInRedHatLdapCommand implements Runnable {

    @CommandLine.Option(names = {"-o", "--source-org"}, description = "Source organization for changed config.yaml")
    String sourceOrg;

    @CommandLine.Option(names = {"-r", "--source-repo"}, description = "Source repository for changed config.yaml")
    String sourceRepo;

    @CommandLine.Option(names = {"-b", "--source-branch"}, description = "Source branch for changed config.yaml")
    String sourceBranch;

    @CommandLine.Option(names = {"-i", "--ldap-members-csv"}, description = "CSV of known members, generated by 'collect-members-from-ldap'", required = true)
    String ldapMembersCsv;

    @CommandLine.Option(names = {"-s", "--supplementary-csv"}, description = "CSV of known members collected manually or via the google form", required = true)
    String supplementaryCsv;

    @CommandLine.Option(names = {"-vpn", "--fail-if-no-vpn"}, description = "Throw an exception if can't connect to LDAP")
    boolean failNoVpn;

    @Inject
    ConfigYamlMemberInRedHatLdapService configYamlMemberInRedHatLdapService;

    @Override
    public void run() {
        try {
            configYamlMemberInRedHatLdapService.run(sourceOrg, sourceRepo, sourceBranch, ldapMembersCsv, supplementaryCsv, failNoVpn);
        } catch (IOException | LdapException | TemplateException e) {
            throw new RuntimeException(e);
        }
    }
}